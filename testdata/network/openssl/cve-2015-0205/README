This directory was created using the following commands, with the goal
of replicating the conditions necessary for CVE-2015-0205.

# Generate trust anchor (self-signed)
openssl genrsa -out root.key 4096
openssl req -x509 -new -nodes -key root.key -days 3650 -out ta.pem # Common Name: TA
openssl x509 -text -noout < ta.pem # check for correctness

# Generate Diffie-Hellman Parameters (p, g)
openssl dhparam -out dhparam.pem 2048

# Generate Server public/private DH pair
openssl genpkey -paramfile dhparam.pem -out s_dhkey.pem
openssl pkey -text < s_dhkey.pem # check
openssl pkey -in s_dhkey.pem -pubout -out s_dhpubkey.pem
openssl pkey -pubin -text < s_dhpubkey.pem # check

# Create Server RSA CSR (b/c you can't create a DH CSR)
openssl genrsa -out s_dummykey.pem 4096
openssl req -new -key s_dummykey.pem -out s_ee.csr # Server EE

# Generate Server DH cert from RSA CSR and DH public key
openssl x509 -req -in s_ee.csr -CAkey root.key -CA ta.pem -force_pubkey s_dhpubkey.pem -out s_ee.pem -days 3650 -CAcreateserial
openssl x509 -text -noout < s_ee.pem # check
openssl verify -CAfile ta.pem s_ee.pem # check signature

# Generate Client public/private DH pair
openssl genpkey -paramfile dhparam.pem -out c_dhkey.pem
openssl pkey -text < c_dhkey.pem # check
openssl pkey -in c_dhkey.pem -pubout -out c_dhpubkey.pem
openssl pkey -pubin -text < c_dhpubkey.pem # check

# Create Client RSA CSR (b/c you can't create a DH CSR)
openssl genrsa -out c_dummykey.pem 4096
openssl req -new -key c_dummykey.pem -out c_ee.csr # Client EE

# Generate Client DH cert from RSA CSR and DH public key
openssl x509 -req -in c_ee.csr -CAkey root.key -CA ta.pem -force_pubkey c_dhpubkey.pem -out c_ee.pem -days 3650 -CAcreateserial
openssl x509 -text -noout < c_ee.pem # check
openssl verify -CAfile ta.pem c_ee.pem # check signature

# Using OpenSSL commit e85b497e799763b5c127f886396361751aa89095, record normal
# and attack traffic as follows:
openssl s_server -msg -tlsextdebug -Verify 2 -cipher DH-RSA-AES128-GCM-SHA256 -key s_dhkey.pem -CAfile ta.pem -cert s_ee.pem -debug -state
# normal client
openssl s_client -connect localhost:4433 -cert c_ee.pem -cipher DH-RSA-AES128-GCM-SHA256 -CAfile ta.pem -msg -tlsextdebug -verify 2 -showcerts -key c_dhkey.pem -record dhclient00.ktest
# attack client
openssl s_client -connect localhost:4433 -cert c_ee.pem -cipher DH-RSA-AES128-GCM-SHA256 -CAfile ta.pem -msg -tlsextdebug -verify 2 -showcerts -attack_dh -record dhclient01.ktest
